package com.kramerica.meatworldavatar.meatdomain;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.kramerica.meatworldavatar.Habit;
import com.kramerica.meatworldavatar.Event;
import com.kramerica.meatworldavatar.Relevance;
import com.kramerica.meatworldavatar.Avatar;

import com.kramerica.meatworldavatar.meatdomain.HabitDao;
import com.kramerica.meatworldavatar.meatdomain.EventDao;
import com.kramerica.meatworldavatar.meatdomain.RelevanceDao;
import com.kramerica.meatworldavatar.meatdomain.AvatarDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig habitDaoConfig;
    private final DaoConfig eventDaoConfig;
    private final DaoConfig relevanceDaoConfig;
    private final DaoConfig avatarDaoConfig;

    private final HabitDao habitDao;
    private final EventDao eventDao;
    private final RelevanceDao relevanceDao;
    private final AvatarDao avatarDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        habitDaoConfig = daoConfigMap.get(HabitDao.class).clone();
        habitDaoConfig.initIdentityScope(type);

        eventDaoConfig = daoConfigMap.get(EventDao.class).clone();
        eventDaoConfig.initIdentityScope(type);

        relevanceDaoConfig = daoConfigMap.get(RelevanceDao.class).clone();
        relevanceDaoConfig.initIdentityScope(type);

        avatarDaoConfig = daoConfigMap.get(AvatarDao.class).clone();
        avatarDaoConfig.initIdentityScope(type);

        habitDao = new HabitDao(habitDaoConfig, this);
        eventDao = new EventDao(eventDaoConfig, this);
        relevanceDao = new RelevanceDao(relevanceDaoConfig, this);
        avatarDao = new AvatarDao(avatarDaoConfig, this);

        registerDao(Habit.class, habitDao);
        registerDao(Event.class, eventDao);
        registerDao(Relevance.class, relevanceDao);
        registerDao(Avatar.class, avatarDao);
    }
    
    public void clear() {
        habitDaoConfig.getIdentityScope().clear();
        eventDaoConfig.getIdentityScope().clear();
        relevanceDaoConfig.getIdentityScope().clear();
        avatarDaoConfig.getIdentityScope().clear();
    }

    public HabitDao getHabitDao() {
        return habitDao;
    }

    public EventDao getEventDao() {
        return eventDao;
    }

    public RelevanceDao getRelevanceDao() {
        return relevanceDao;
    }

    public AvatarDao getAvatarDao() {
        return avatarDao;
    }

}
